set transparency=2
set guioptions-=T                                       " Start without the toolbar
set guioptions-=rL                                      " Start without the scrollbars
set selectmode-=mouse                                   " disable select mode
color railscasts2
set guifont=Menlo\ Regular:h11                          " font size
set linespace=2                                         " add 2 pixels betewan line
set antialias                                           " antialiasing

set visualbell                                          " don't beep

if has("gui_macvim")
  set fuoptions=maxhorz,maxvert                         " Fullscreen takes up entire screen
  macmenu Window.Toggle\ Full\ Screen\ Mode key=<D-CR>  " Command-Return for fullscreen
end

"" Project Tree
if exists("loaded_nerd_tree")
  autocmd VimEnter * call s:CdInDirectory(expand("<amatch>"))
  autocmd FocusGained * call s:UpdateNERDTree()
  autocmd WinEnter * call s:CloseIfOnlyNerdTreeLeft()
endif

" Close all open buffers on entering a window if the only
" buffer that's left is the NERDTree buffer
function s:CloseIfOnlyNerdTreeLeft()
  if exists("t:NERDTreeBufName")
    if bufwinnr(t:NERDTreeBufName) != -1
      if winnr("$") == 1
        q
      endif
    endif
  endif
endfunction

" If the parameter is a directory, cd into it
function s:CdInDirectory(directory)
  let explicitDirectory = isdirectory(a:directory)
  let directory = explicitDirectory || empty(a:directory)

  if explicitDirectory
    exe "cd " . fnameescape(a:directory)
  else
    exe "cd " . expand("%:p:h")
  endif

  " Allows reading from stdin
  " ex: git diff | mvim -R -
  if strlen(a:directory) == 0 
    return
  endif

  if directory
    NERDTreeToggle
    wincmd p
    bd
  else
    NERDTreeToggle
    wincmd p
  endif

  if explicitDirectory
    wincmd p
  endif
endfunction

" NERDTree utility function
function s:UpdateNERDTree(...)
  let stay = 0

  if(exists("a:1"))
    let stay = a:1
  end

  if exists("t:NERDTreeBufName")
    let nr = bufwinnr(t:NERDTreeBufName)
    if nr != -1
      exe nr . "wincmd w"
      exe substitute(mapcheck("R"), "<CR>", "", "")
      if !stay
        wincmd p
      end
    endif
  endif

  if exists(":CommandTFlush") == 2
    CommandTFlush
  endif
endfunction
